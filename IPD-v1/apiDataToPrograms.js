//Go to https://manifold.markets/api/v0/slug/which-240-character-program-wins-th, copy the result, and assign it to the "input" variable below.

const fs = require("fs");

const disqualifiedIDs = [18, 19, 6, 7, 12, 20];

setTimeout(function() {
	let programs = input.answers.map(answer => answer.text);
	programs.pop();//Remove the "other" answer.
	for (let i = 0 ; i < programs.length ; i++) {
		if (disqualifiedIDs.includes(i)) {
			console.log(`Disqualifying program ${i}: ` + programs[i].replace(/\n/g," "));
			programs[i] = null;
		}

		if (programs[i] !== null && programs[i].includes("private submission")) {
			console.log(`Invalid program ${i}: ` + programs[i]);
			programs[i] = null;
		}
	}
	console.log(`${programs.filter(program => program !== null).length} valid programs`);
	fs.writeFileSync("allIPDPrograms.json", JSON.stringify(programs));
}, 0);

const input = {"id":"L8Ugd2tpKaKtVrQCCLjM","creatorId":"y1hb6k7txdZPV5mgyxPFApZ7nQl2","creatorUsername":"IsaacKing","creatorName":"Isaac King","createdTime":1699517514551,"creatorAvatarUrl":"https://firebasestorage.googleapis.com/v0/b/mantic-markets.appspot.com/o/user-images%2FIsaacKing%2FfP-MqjWonh.jpg?alt=media&token=e21d446d-75e0-4ab8-8e7c-a7b2af67e4cc","closeTime":1700197140000,"question":"Which <=240 character program wins the iterated prisoner's dilemma?","slug":"which-240-character-program-wins-th","url":"https://manifold.markets/IsaacKing/which-240-character-program-wins-th","totalLiquidity":5320.5,"outcomeType":"MULTIPLE_CHOICE","mechanism":"cpmm-multi-1","volume":11985.584294562475,"volume24Hours":10599.809054568677,"isResolved":false,"lastUpdatedTime":1699645902432,"answers":[{"id":"b70d43afbdef","text":"r = 0;","index":0,"userId":"y1hb6k7txdZPV5mgyxPFApZ7nQl2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699517514551,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":28.86751345948129,"pool":{"YES":5098.5615130738315,"NO":39.21787510228616},"probability":0.007633234543417847},{"id":"0705cc310c01","text":"r = 1;","index":1,"userId":"y1hb6k7txdZPV5mgyxPFApZ7nQl2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699517514551,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":28.86751345948129,"pool":{"YES":5051.037885416619,"NO":21.909910494762887},"probability":0.004318970227216118},{"id":"7d2eff9a4c5","text":"r = h.length === 0 ? 1 : h[h.length - 1].o;","index":2,"userId":"y1hb6k7txdZPV5mgyxPFApZ7nQl2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699517514551,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":48.86751345948129,"pool":{"YES":5538.325737084233,"NO":54.201172011952885},"probability":0.00969171412010468},{"id":"9845854243e5","text":"r = Math.random() < 0.5;","index":3,"userId":"HSB5OZ8jBHQZZLjs9oWS7avZTqE3","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699533183131,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":64.06218159426722,"pool":{"YES":5249.8668285740805,"NO":24.22921693138152},"probability":0.004594003734920498},{"id":"0f6a93691bb3","text":"r =  (c == s || !c.match('Math')) ? 1 : 0;","index":4,"userId":"lUGDbuJVTpPyYsXTYXpd4139sE43","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699535402331,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":18.317553587309384,"pool":{"YES":4953.250543510095,"NO":23.714485362315468},"probability":0.004764848702922926},{"id":"7f0abc02431d","text":"r = c.length > 15","index":5,"userId":"9zpaWIkLNJcfx5kKfEV7Xb5Pq732","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699564043873,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":45,"pool":{"YES":4882.024730580458,"NO":15.461030413098914},"probability":0.003156932182680266},{"id":"ee375a446bfa","text":"let r = d === m ? 1 : f(c, d, m, \"r=1\", c, f, h, i) === 1 && f(c, d, m, \"r=0\", c, f, h, i) === 0 ? 1 : 0;","index":6,"userId":"hIMCU8obvLSeOQm07kqvPkD2lVm2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699567745541,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":45,"pool":{"YES":4411.406694595726,"NO":32.69345866924959},"probability":0.007356598083243123},{"id":"4e14324378cf","text":"let r;try{const hC=h.map(()=>({m:1})),hD=h.map(()=>({m:0}));r=d==m||(f(c,d,m,\"r=1\",c,f,hC)==1&&f(c,d,m,\"r=0\",c,f,hD)==0)||(d!=m&&h.length&&f(c,d,m,s,c,f,h)==h.slice(-1)[0].o)?1:0}catch(e){r=0}","index":7,"userId":"hIMCU8obvLSeOQm07kqvPkD2lVm2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699568296007,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":65,"pool":{"YES":4584.235906279686,"NO":31.371447156488724},"probability":0.006796818870030976},{"id":"59c120b5e74","text":"r = 0; setTimeout(function() { }, 750);\n\n","index":8,"userId":"uyzAXSRdCCUWs4KstCLq2GfzAip2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699569726076,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":25,"pool":{"YES":4389.855671459722,"NO":10.597134982922721},"probability":0.0024081919404765795},{"id":"5bc8b34d2aea","text":"r = c.includes(\"r = 1\") ? 1 : 0;","index":9,"userId":"K0l9JnD5DcPqyfloiKWIHbK8klD3","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699571791755,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":25,"pool":{"YES":4173.431901737515,"NO":11.077235682489846},"probability":0.00264720073937265},{"id":"58e6e11dfec2","text":"r = 1; setTimeout(function() { }, 750);","index":10,"userId":"uyzAXSRdCCUWs4KstCLq2GfzAip2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699572054214,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":25,"pool":{"YES":3897.121650578243,"NO":5.97797362505685},"probability":0.0015315964747574366},{"id":"bbf4ef059bb5","text":"r = h.length === 0 ? 1 : (h[h.length - 1].o === 1 ? h[h.length - 1].m : 1 - h[h.length - 1].m)","index":11,"userId":"yykycFLFkqfC48MK7gaPfseTkvl2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699572428800,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":44.990926492940744,"pool":{"YES":4148.576756303709,"NO":41.42224730439221},"probability":0.009885980227852703},{"id":"c0e112c8386b","text":"let r_ = h.length === 0 ? 1 : (h[h.length - 1].o === 1 ? h[h.length - 1].m : 1 - h[h.length - 1].m); r = Math.random() < 0.95 ? r : 1 - r;","index":12,"userId":"yykycFLFkqfC48MK7gaPfseTkvl2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699573123703,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":45,"pool":{"YES":3766.7030982499155,"NO":17.81931314543251},"probability":0.0047084707681417995},{"id":"6efb74a298c9","text":"let r_ = h.length === 0 ? 1 : (h[h.length - 1].o === 1 ? h[h.length - 1].m : 1 - h[h.length - 1].m); r = Math.random() < 0.95 ? r_ : 1 - r_;","index":13,"userId":"yykycFLFkqfC48MK7gaPfseTkvl2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699573542608,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":45,"pool":{"YES":3848.791211707612,"NO":20.715726438889167},"probability":0.005353582968069835},{"id":"04ec38b3e00f","text":"r = h.every((r) => r.o);","index":14,"userId":"fnYl3YDoUjXvGNrj72EZvKCbHR83","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699575973739,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":25,"pool":{"YES":3533.481616598543,"NO":5.777126542715669},"probability":0.001632298444952967},{"id":"91e20a9c4c42","text":"r = 1 && h.every((r) => r.o);","index":15,"userId":"fnYl3YDoUjXvGNrj72EZvKCbHR83","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699576234334,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":25,"pool":{"YES":3682.5694505949405,"NO":5.6311663939341505},"probability":0.0015268058814359058},{"id":"4c32ec5fb193","text":"r = 1; r = (d === 2) ? 1 : ((d < 14) ? 0 : h.every((r) => r.o))","index":16,"userId":"tBLV0DkLmwWT5WrLswQj0Xfwuld2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699595150283,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":25,"pool":{"YES":2035.149324563091,"NO":12.431873000416479},"probability":0.00607149206840228},{"id":"fabc814e8f84","text":"DaemonicSigil's private submission","index":17,"userId":"y1hb6k7txdZPV5mgyxPFApZ7nQl2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699599095231,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":25,"pool":{"YES":865.9715065307805,"NO":26.020313262273636},"probability":0.029171022295148917},{"id":"b5beb4f63e20","text":"  let ones = 0;\n  let zeros = 0;\n  for (let i = 0; i < c.length; i++) {\n    if (c[i] === '1') {\n      ones++;\n    } else if (c[i] === '0') {\n      zeros++;\n    }\n  }\n  const total = ones + zeros;\n  const random = Math.random();\n  if (random","index":18,"userId":"3luPfohdMdUbsM9i6VmmxPFexwI3","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699620194865,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":45,"pool":{"YES":1615.3407200038323,"NO":2.105001366522497},"probability":0.0013014355528042502},{"id":"393bf7dcdb65","text":"let o=0,z=0;for(let j=0;j<c.length;j++){if(c[j]==='1'){o++}else if(c[j]==='0'){z++}}const t=o+z,r=Math.random();if(r<o/t){r=1}else{r=0}","index":19,"userId":"3luPfohdMdUbsM9i6VmmxPFexwI3","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699620366286,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":45,"pool":{"YES":1651.8037748828383,"NO":1.796871059547433},"probability":0.001086641483816909},{"id":"a8419e4268a7","text":"let c1=c.replaceAll(/([\"`']).*?\\1/g,'');r=c1.match(\"set|while|for|Date|eval|window\")?+(''+Array.from('a'.repeat(2e6)).map(x=>x.toString.toString().length).reduce((x,y)=>x*1.0002+y))[2]:(Math.random()<1/2?1:f(c,m,d,s,c,f,i,h));","index":20,"userId":"lUGDbuJVTpPyYsXTYXpd4139sE43","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699621549868,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":45,"pool":{"YES":1311.4112374995125,"NO":3.7076213838582364},"probability":0.0028192291204813765},{"id":"89db50e48e52","text":"r = ((s.length + d) % 3 == 1)","index":21,"userId":"W5dtB2cQekRSc4GTqqJaiA7gSJS2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699629632270,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":45,"pool":{"YES":1478.9542511174345,"NO":0.6868014251505976},"probability":0.0004641675925187477},{"id":"73cbe84cbbba","text":"BenjaminCosman's private submission","index":22,"userId":"NOwmwNXwwEPeMSyRv7Jby3Ry2Qs1","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699635907578,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.968","totalLiquidity":43.21672130089321,"pool":{"YES":372.46575427158257,"NO":13.371234589301931},"probability":0.0346551392824678},{"id":"849edbd354a6","text":"Econom3trics's private submission","index":23,"userId":"y1hb6k7txdZPV5mgyxPFApZ7nQl2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699637410448,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":22.57555072483766,"pool":{"YES":267.95058972230424,"NO":9.780696369118122},"probability":0.03521640110037353},{"id":"249608bf3200","text":"try{for(o=Date.now,t=o(),e=h,g=i,p=(a,m,o)=>[...a,{m,o}],l=_=>o()-t<=500,n=(x,i,h)=>+l()&&+!!f(c,m,d,s,c,_=>x,i,h),x=r=0;h.length<100&&l();y=n(1,i,h),z=n(0,g,e),r+=(y*2-z*2-1)/++x,i=p(i,y,1),h=p(h,1,y),g=p(g,z,0),e=p(e,0,z));}catch{}r=r>0;","index":24,"userId":"vFBeGDlrdGTqxZAR7rhIcc4j8ME2","isOther":false,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699638523658,"subsidyPool":0,"fsUpdatedTime":"2023-11-10T19:50:41.193","totalLiquidity":21.23884406160538,"pool":{"YES":358.35008969858245,"NO":3.6369078871786673},"probability":0.010047067743965084},{"id":"82e991f1853e","text":"Other","index":25,"userId":"y1hb6k7txdZPV5mgyxPFApZ7nQl2","isOther":true,"contractId":"L8Ugd2tpKaKtVrQCCLjM","createdTime":1699517514551,"subsidyPool":2.4677563842196197,"fsUpdatedTime":"2023-11-10T19:50:46.681","totalLiquidity":41.23884406160538,"pool":{"YES":48.22253644308045,"NO":194.29694776454946},"probability":0.801160155850425}],"description":{"type":"doc","content":[{"type":"paragraph","content":[{"text":"A valid answer to this market is a line of Javascript code that plays the prisoner's dilemma.","type":"text"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"To return its decision, your program should modify the global variable \"r\" to be 0 for defection and 1 for cooperation. (Or anything that coerces to 0 or 1, like true/false.)","type":"text"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"I will wrap your code in a function like this:","type":"text"}]},{"type":"blockquote","content":[{"type":"paragraph","content":[{"text":"const p0 = async function(d,m,c,s,f,h,i) {","type":"text"}]},{"type":"paragraph","content":[{"text":"\tlet r = 9;","type":"text"}]},{"type":"paragraph","content":[{"text":"\t//Your code here","type":"text"}]},{"type":"paragraph","content":[{"text":"\treturn Number(r);","type":"text"}]},{"type":"paragraph","content":[{"text":"};","type":"text"}]}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"\"d\" is a number that's the ID of its opponent. The first answer to this market (chronologically) has an ID of 0, the next of 1, etc.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"\"m\" is the ID of the current program.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"\"c\" is a string that is the source code of the opponent. (Just the user-submitted code, not the wrapper.)","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"\"s\" is a string that is the program's own source code.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"\"f\" is a function f(a,d,m,c,s,f,h,i) that takes in a source code string a and (optionally) the 7 other args, adds the wrapper, runs it, and returns the result. (The other args will default to the ones from the calling context.) For example you could call f(\"r=0\") and it will return 0.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"\"h\" is an array with the history of all past games. Each entry of the array is an object with properties \"m\" and \"o\", (for \"me\" and \"opponent\") with values of 0 or 1 to denote defection or cooperation. For example, if they're playing for the 3rd time, and the first time they both cooperated and the second time your program defected and the other cooperated, h is [{\"m\":1,\"o\":1},{\"m\":0,\"o\":1}].","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"\"i\" is the history inverted, with m and o's values swapped in each object.","type":"text"}]}]}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"These programs will then be run against each other in a round-robin tournament where each program plays against every program exactly once. (Including itself.) Each match between two programs consists of a random number of games that could be anywhere from 1 to 100. (The match lengths are determined individually, so your program will have to play matches of many different lengths.)","type":"text"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"Each game uses the traditional payoff matrix, converted to positive points; double cooperate gets 2 points each, double defect gets 1 point each, cooperate-defect gets 3 points to the defector and 0 to the cooperator. At the end of every match, points are normalized to a match length of 1 so that programs do not end up with more points just for lucking into a longer match. (For example, if your program played a 12-game match and ended with 21 points, that's normalized to 1.75 points towards its final total.)","type":"text"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"Any program that attempts to escape the game, such as by referencing or modifying global variables that the top-level tournament program is using, my computer's file system, or the internet, is disqualified. If a program errors, it is disqualified. If a program returns anything other than 0 or 1, it is disqualified. If a program takes more than 1 second to return an answer, it is disqualified. (If the program spawns a child process, that child process may take longer than 1 second; I only care about the time taken until the top-level function returns. As an exception, if a program spawns so many child processes over the course of the tournament that it starts lagging my computer, I will treat that as a security issue and disqualify it.) Any program that is disqualified loses the entire tournament, not just that game or match, and you do not get a replacement submission. Please make sure your programs are well-formed, and don't make my life difficult.","type":"text"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"The exact disqualification procedure is as follows:","type":"text"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Any program that seems like a security risk is disqualified preemptively. (i.e. file system or internet access, or trying to modify external variables.)","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"All other programs are put onto a list, then the tournament is started with that list.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"A random program is picked and played against a random program, repeating this process until all its matches are done, then moving on to the next. If a bot ever returns an invalid result, errors, or runs for more than 1 second without returning a result, the tournament is halted, that bot is removed from the list, all scores are reset, and the tournament starts over from this step with the new, smaller list of contestants.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"If I notice my computer slowing down during the course of the tournament due to a large number of unkilled infinitely looping child processes, I will halt the tournament, figure out which program is responsible, disqualify it, publically shame it just for good measure, and then start over from step 3.","type":"text"}]},{"type":"paragraph"}]}]},{"type":"paragraph","content":[{"text":"The program with the highest final point total wins. If there is a tie, I will run a second tournament of the same structure that includes only the tied programs, repeating this process until there is a single winner. If this ends in a stable equilibrium of tied programs, I'll resolve to all of them equally.","type":"text"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"Each person may submit a maximum of 3 programs. One of them may be private, the other two must be public. To make your private submission, add an answer that says \"[name]'s private submission\" so that people know you're going to be submitting one and can bet on how it will do. I'll reach out to you to get its code once the market closes. (If you don't have a Manifold account, reach out to me on some other platform. I'll donate your winnings to a charity of your choice.)","type":"text"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"This market closes once it doesn't seem like any new submissions will be forthcoming any time soon. I will run the game, PM the winner and briefly reopen the market to let them bet on the winning answer (so they get to profit the most mana, as their reward for winning), then resolve the market.","type":"text"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"I have started us off with one cooperate-bot, one defect-bot, and one tit-for-tat-bot. I may make additional some additional submissions myself, but only public ones, only if I think it would make this market more fun, and only before I've seen anyone's private submission.","type":"text"}]},{"type":"paragraph"},{"type":"paragraph","content":[{"text":"If there's a serious problem with these criteria, please tell me ASAP and I will modify them accordingly to fix the issue.","type":"text"}]}]},"coverImageUrl":"https://oaidalleapiprodscus.blob.core.windows.net/private/org-nyQjO96Y9m1nvs1nuKELNuRQ/user-rdQGxAZSfLTSAhvgWME2ppVa/img-ILNB7UmykFsXTk55WkiTbjA0.png?st=2023-11-09T07%3A12%3A09Z&se=2023-11-09T09%3A12%3A09Z&sp=r&sv=2021-08-06&sr=b&rscd=inline&rsct=image/png&skoid=6aaadede-4fb3-4698-a8f6-684d7786b067&sktid=a48cca56-e6da-484e-a814-9c849652bcb3&skt=2023-11-09T04%3A12%3A30Z&ske=2023-11-10T04%3A12%3A30Z&sks=b&skv=2021-08-06&sig=BQYkXR5zBv7cF%2BYstUIVV7LjpcJnGRBPZLa//k9Be5o%3D","groupSlugs":["code-golf","programming","game-theory"],"textDescription":"A valid answer to this market is a line of Javascript code that plays the prisoner's dilemma.\n\nTo return its decision, your program should modify the global variable \"r\" to be 0 for defection and 1 for cooperation. (Or anything that coerces to 0 or 1, like true/false.)\n\nI will wrap your code in a function like this:\n\nconst p0 = async function(d,m,c,s,f,h,i) {\n\n\tlet r = 9;\n\n\t//Your code here\n\n\treturn Number(r);\n\n};\n\n\"d\" is a number that's the ID of its opponent. The first answer to this market (chronologically) has an ID of 0, the next of 1, etc.\n\n\"m\" is the ID of the current program.\n\n\"c\" is a string that is the source code of the opponent. (Just the user-submitted code, not the wrapper.)\n\n\"s\" is a string that is the program's own source code.\n\n\"f\" is a function f(a,d,m,c,s,f,h,i) that takes in a source code string a and (optionally) the 7 other args, adds the wrapper, runs it, and returns the result. (The other args will default to the ones from the calling context.) For example you could call f(\"r=0\") and it will return 0.\n\n\"h\" is an array with the history of all past games. Each entry of the array is an object with properties \"m\" and \"o\", (for \"me\" and \"opponent\") with values of 0 or 1 to denote defection or cooperation. For example, if they're playing for the 3rd time, and the first time they both cooperated and the second time your program defected and the other cooperated, h is [{\"m\":1,\"o\":1},{\"m\":0,\"o\":1}].\n\n\"i\" is the history inverted, with m and o's values swapped in each object.\n\nThese programs will then be run against each other in a round-robin tournament where each program plays against every program exactly once. (Including itself.) Each match between two programs consists of a random number of games that could be anywhere from 1 to 100. (The match lengths are determined individually, so your program will have to play matches of many different lengths.)\n\nEach game uses the traditional payoff matrix, converted to positive points; double cooperate gets 2 points each, double defect gets 1 point each, cooperate-defect gets 3 points to the defector and 0 to the cooperator. At the end of every match, points are normalized to a match length of 1 so that programs do not end up with more points just for lucking into a longer match. (For example, if your program played a 12-game match and ended with 21 points, that's normalized to 1.75 points towards its final total.)\n\nAny program that attempts to escape the game, such as by referencing or modifying global variables that the top-level tournament program is using, my computer's file system, or the internet, is disqualified. If a program errors, it is disqualified. If a program returns anything other than 0 or 1, it is disqualified. If a program takes more than 1 second to return an answer, it is disqualified. (If the program spawns a child process, that child process may take longer than 1 second; I only care about the time taken until the top-level function returns. As an exception, if a program spawns so many child processes over the course of the tournament that it starts lagging my computer, I will treat that as a security issue and disqualify it.) Any program that is disqualified loses the entire tournament, not just that game or match, and you do not get a replacement submission. Please make sure your programs are well-formed, and don't make my life difficult.\n\nThe exact disqualification procedure is as follows:\n\nAny program that seems like a security risk is disqualified preemptively. (i.e. file system or internet access, or trying to modify external variables.)\n\nAll other programs are put onto a list, then the tournament is started with that list.\n\nA random program is picked and played against a random program, repeating this process until all its matches are done, then moving on to the next. If a bot ever returns an invalid result, errors, or runs for more than 1 second without returning a result, the tournament is halted, that bot is removed from the list, all scores are reset, and the tournament starts over from this step with the new, smaller list of contestants.\n\nIf I notice my computer slowing down during the course of the tournament due to a large number of unkilled infinitely looping child processes, I will halt the tournament, figure out which program is responsible, disqualify it, publically shame it just for good measure, and then start over from step 3.\n\nThe program with the highest final point total wins. If there is a tie, I will run a second tournament of the same structure that includes only the tied programs, repeating this process until there is a single winner. If this ends in a stable equilibrium of tied programs, I'll resolve to all of them equally.\n\nEach person may submit a maximum of 3 programs. One of them may be private, the other two must be public. To make your private submission, add an answer that says \"[name]'s private submission\" so that people know you're going to be submitting one and can bet on how it will do. I'll reach out to you to get its code once the market closes. (If you don't have a Manifold account, reach out to me on some other platform. I'll donate your winnings to a charity of your choice.)\n\nThis market closes once it doesn't seem like any new submissions will be forthcoming any time soon. I will run the game, PM the winner and briefly reopen the market to let them bet on the winning answer (so they get to profit the most mana, as their reward for winning), then resolve the market.\n\nI have started us off with one cooperate-bot, one defect-bot, and one tit-for-tat-bot. I may make additional some additional submissions myself, but only public ones, only if I think it would make this market more fun, and only before I've seen anyone's private submission.\n\nIf there's a serious problem with these criteria, please tell me ASAP and I will modify them accordingly to fix the issue."}